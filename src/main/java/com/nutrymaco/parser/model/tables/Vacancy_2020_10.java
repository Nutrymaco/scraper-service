/*
 * This file is generated by jOOQ.
 */
package com.nutrymaco.parser.model.tables;


import com.nutrymaco.parser.model.Keys;
import com.nutrymaco.parser.model.ParserService;
import com.nutrymaco.parser.model.tables.records.Vacancy_2020_10Record;

import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vacancy_2020_10 extends TableImpl<Vacancy_2020_10Record> {

    private static final long serialVersionUID = -302164325;

    /**
     * The reference instance of <code>parser_service.vacancy_2020_10</code>
     */
    public static final Vacancy_2020_10 VACANCY_2020_10 = new Vacancy_2020_10();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Vacancy_2020_10Record> getRecordType() {
        return Vacancy_2020_10Record.class;
    }

    /**
     * The column <code>parser_service.vacancy_2020_10.id</code>.
     */
    public final TableField<Vacancy_2020_10Record, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('parser_service.vacancy_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.name</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.description</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.company_name</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> COMPANY_NAME = createField(DSL.name("company_name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.city</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.created</code>.
     */
    public final TableField<Vacancy_2020_10Record, Date> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.salary_from</code>.
     */
    public final TableField<Vacancy_2020_10Record, Integer> SALARY_FROM = createField(DSL.name("salary_from"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.salary_to</code>.
     */
    public final TableField<Vacancy_2020_10Record, Integer> SALARY_TO = createField(DSL.name("salary_to"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.currency</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> CURRENCY = createField(DSL.name("currency"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.experience_from</code>.
     */
    public final TableField<Vacancy_2020_10Record, Integer> EXPERIENCE_FROM = createField(DSL.name("experience_from"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.experience_to</code>.
     */
    public final TableField<Vacancy_2020_10Record, Integer> EXPERIENCE_TO = createField(DSL.name("experience_to"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>parser_service.vacancy_2020_10.url</code>.
     */
    public final TableField<Vacancy_2020_10Record, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>parser_service.vacancy_2020_10</code> table reference
     */
    public Vacancy_2020_10() {
        this(DSL.name("vacancy_2020_10"), null);
    }

    /**
     * Create an aliased <code>parser_service.vacancy_2020_10</code> table reference
     */
    public Vacancy_2020_10(String alias) {
        this(DSL.name(alias), VACANCY_2020_10);
    }

    /**
     * Create an aliased <code>parser_service.vacancy_2020_10</code> table reference
     */
    public Vacancy_2020_10(Name alias) {
        this(alias, VACANCY_2020_10);
    }

    private Vacancy_2020_10(Name alias, Table<Vacancy_2020_10Record> aliased) {
        this(alias, aliased, null);
    }

    private Vacancy_2020_10(Name alias, Table<Vacancy_2020_10Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Vacancy_2020_10(Table<O> child, ForeignKey<O, Vacancy_2020_10Record> key) {
        super(child, key, VACANCY_2020_10);
    }

    @Override
    public Schema getSchema() {
        return ParserService.PARSER_SERVICE;
    }

    @Override
    public Identity<Vacancy_2020_10Record, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_2020_10;
    }

    @Override
    public Vacancy_2020_10 as(String alias) {
        return new Vacancy_2020_10(DSL.name(alias), this);
    }

    @Override
    public Vacancy_2020_10 as(Name alias) {
        return new Vacancy_2020_10(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vacancy_2020_10 rename(String name) {
        return new Vacancy_2020_10(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vacancy_2020_10 rename(Name name) {
        return new Vacancy_2020_10(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, String, String, Date, Integer, Integer, String, Integer, Integer, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
